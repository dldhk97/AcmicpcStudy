//#11726
//
//제목
//2×n 타일링
//
//문제
//
//2×n 크기의 직사각형을 1×2, 2×1 타일로 채우는 방법의 수를 구하는 프로그램을 작성하시오.
//
//아래 그림은 2×5 크기의 직사각형을 채운 한 가지 방법의 예이다.
//
//입력
//
//첫째 줄에 n이 주어진다. (1 ≤ n ≤ 1, 000)
//출력
//
//첫째 줄에 2×n 크기의 직사각형을 채우는 방법의 수를 10, 007로 나눈 나머지를 출력한다.

#include <iostream>

using namespace std;

//점화식은 f(n) = f(n-1) + f(n-2)와 같다.
//n=4일 때를 기준으로 생각해보면, 
//n-1인 n=3에서 끝에 1*2를 하나 추가하는 방법이 있고, 이 방법은 n=3을 만드는 경우의 수와 동일하다. (끝짜락에 타일 하나만 추가하면 되니까)
//그리고 n-2인 n=2에서 2*2공간을 채우는 방법이 있다. 2*2를 채우는 방법은 2*1을 두개 넣기 or 1*2 두개 넣기가 있다.
//여기서 1*2를 두개 넣는 방법은, n-1인 n=3에서 끝에 1*2를 추가하는 방법과 겹친다.
//따라서 n-2인 n=2에서 2*2를 채우는 유효한 방법은 하나밖에 없으므로, 이 방법 역시 n=2를 만드는 경우의 수와 동일하다. (마찬가지로 끝에 타일 두개 추가)
//따라서 점화식이 f(n) = f(n-1) + f(n-2)가 되는 것이다.
//그림을 그려가면서 이해해보면 좋다고 생각함.

int arr[1001];

int solution(int n)
{
	if (n == 1)
		return 1;

	if (n == 2)
		return 2;

	//n - 1이 없으면 만든다.
	if (arr[n - 1] == 0)
		arr[n - 1] = solution(n - 1);

	//n - 2가 없으면 만든다.
	if (arr[n - 2] == 0)
		arr[n - 2] = solution(n - 2);

	//n - 2의 경우의 수와 n - 1의 경우의 수를 합한 후, 10007로 나눈다.
	return (arr[n - 1] + arr[n - 2]) % 10007;
}

int main()
{
	int input;
	cin >> input;

	cout << solution(input) << "\n";;

	return 0;
}