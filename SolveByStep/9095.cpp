//#9095
//
//제목
//1, 2, 3 더하기
//
//문제
//
//정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다.합을 나타낼 때는 수를 1개 이상 사용해야 한다.
//
//1 + 1 + 1 + 1
//1 + 1 + 2
//1 + 2 + 1
//2 + 1 + 1
//2 + 2
//1 + 3
//3 + 1
//
//정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.
//입력
//
//첫째 줄에 테스트 케이스의 개수 T가 주어진다.각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다.n은 양수이며 11보다 작다.
//출력
//
//각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력한다.

#include <iostream>

using namespace std;

//점화식은 f(n) = f(n-1) + f(n-2) + f(n-3)이다.
//n=1은 경우의 수가 1, n=2는 경우의 수가 2, n=3은 경우의 수가 4이다.
//여기서 n=4일때를 기준으로 생각해보자.
//4를 만드는 방법은 n=1의 경우의 수에서 끝에 3을 더하는 방법,
//n=2의 경우의 수에서 끝에 2를 더하는 방법,
//n=3의 경우의 수에서 끝에 1을 더하는 방법이 있다.
//이 3가지의 방법은 모두 겹치지 않는다.
//따라서, n=1에서3을 더하는 방법, n=2의 경우의 수에서 2를 더하는 방법, n=3의 경우의 수에서 1을 더하는 방법으로 점화식을 도출할 수 있다.

int arr[12];

int solution(int n)
{
	if (n == 0)
		return 0;
	else if (n == 1)
		return 1;
	else if (n == 2)
		return 2;
	else if (n == 3)
		return 4;

	if (!arr[n - 1])
		arr[n - 1] = solution(n - 1);

	if (!arr[n - 2])
		arr[n - 2] = solution(n - 2);

	if (!arr[n - 3])
		arr[n - 3] = solution(n - 3);

	return arr[n - 1] + arr[n - 2] + arr[n - 3];
}

int main()
{
	int cnt, input;
	cin >> cnt;

	for (int i = 0; i < cnt; i++)
	{
		cin >> input;
		cout << solution(input) << '\n';
	}
	return 0;
}